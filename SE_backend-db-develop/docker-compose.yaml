name: t10_skillbridge
services:
  database:
    image: postgres:17.2-alpine
    container_name: t10-database
    environment:
      - POSTGRES_USER=${POSTGRES_SUPERUSER}
      - POSTGRES_PASSWORD=${POSTGRES_SUPERPASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - t10-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: t10-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - t10-network
  minio:
    image: minio/minio
    container_name: t10-minio
    ports:
      - ${MINIO_API_PORT}:9000
      - ${MINIO_WEBUI_PORT}:9090
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      - database
    command: server /data --console-address ":9090"
    volumes:
      - minio_data:/data
    networks:
      - t10-network
  # nginx:
  #   image: nginx:latest
  #   container_name: t10-nginx
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - minio
  #   networks:
  #     - t10-network
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PORT=${PORT-6977}
    container_name: t10-backend
    ports:
      - ${PORT-6977}:${PORT-6977}
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env
    volumes:
      - init_flags:/usr/src/app/backend/.init
    networks:
      - t10-network

networks:
  t10-network:
volumes:
  database_data:
  minio_data:
  init_flags:
