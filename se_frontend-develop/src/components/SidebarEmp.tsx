import React, { useState } from "react";
import { MultiSelect } from "@mantine/core";
import { provinces } from "../data/provinces";
import { useNavigate } from "react-router-dom";

function SidebarEmp() {
  const [salaryRange, setSalaryRange] = useState(10000);
  const [selectedProvinces, setSelectedProvinces] = useState<string[]>(["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]);
  const [selectedJobTypes, setSelectedJobTypes] = useState<string[]>(["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]);


  const handleProvinceChange = (value: string[]) => {
    if (value.includes("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î") && value.length > 1) {
      setSelectedProvinces(value.filter((v) => v !== "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"));
    } else if (value.length === 0) {
      setSelectedProvinces(["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]);
    } else {
      setSelectedProvinces(value);
    }
  };

  const handleSalaryChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setSalaryRange(Number(event.target.value));
  };

  const handleJobTypeChange = (value: string[]) => {
    if (value.includes("‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î") && value.length > 1) {
      setSelectedJobTypes(value.filter((v) => v !== "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"));
    } else if (value.length === 0) {
      setSelectedJobTypes(["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]);
    } else {
      setSelectedJobTypes(value);
    }
  };

  const jobTypes = ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "Full-time", "Part-time", "Freelance"];

  return (
    <div className="bg-white shadow-md rounded-lg p-6 w-80 hidden md:block">
      <div className="space-y-4">
        {/* üîé ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
        <div className="search">
          <label htmlFor="search" className="kanit-regular text-sm">
            ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
          </label>
          <input
            type="text"
            id="search"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏≤‡∏ô"
            className="w-full p-2 border border-gray-300 rounded-md"
          />
        </div>

        {/* üìç ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î */}
        <div className="provinces">
          <label htmlFor="provinces" className="kanit-regular text-sm">
            ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
          </label>
          <MultiSelect
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
            data={provinces}
            value={selectedProvinces}
            onChange={handleProvinceChange}
            clearable
            searchable
          />
        </div>

        {/* üè¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô */}
        <div className="job-types">
          <label htmlFor="jobTypes" className="kanit-regular text-sm">
            ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
          </label>
          <MultiSelect
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô"
            data={jobTypes}
            value={selectedJobTypes}
            onChange={handleJobTypeChange}
            clearable
            searchable
          />
        </div>

        {/* üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô */}
        <div className="salary">
          <label htmlFor="salary" className="kanit-regular text-sm">
            ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ‡∏ø{salaryRange.toLocaleString()}
          </label>
          <div className="flex justify-between text-xs mt-1">
            <span>‡∏ø0</span>
            <span>‡∏ø200,000</span>
          </div>
          <input
            type="range"
            id="salary"
            min="0"
            max="200000"
            step="1000"
            value={salaryRange}
            onChange={handleSalaryChange}
            className="w-full h-2 bg-gray-200 rounded-lg"
          />
        </div>

        {/* üîÄ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö */}
        <div className="sort flex flex-col space-y-2">
          <div className="flex space-x-2 items-center kanit-regular text-sm">
            <span>‡πÄ‡∏£‡∏µ‡∏¢‡∏á</span>
            <select id="sort" className="w-full p-2 border border-gray-300 rounded-md">
              <option value="latest">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <option value="salary">‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</option>
              <option value="distance">‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á</option>
            </select>
            <span>‡∏à‡∏≤‡∏Å</span>
            <select id="order" className="w-full p-2 border border-gray-300 rounded-md">
              <option value="all">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
              <option value="highToLow">‡∏™‡∏π‡∏á-‡∏ï‡πà‡∏≥</option>
              <option value="lowToHigh">‡∏ï‡πà‡∏≥-‡∏™‡∏π‡∏á</option>
            </select>
          </div>
        </div>

        {/* üîç ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
        <div className="flex justify-center">
          <button className="bg-seagreen hover:bg-seagreen/90 text-white py-2 px-4 w-full rounded-md">
            ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
          </button>
        </div>
      </div>
    </div>
  );
}

export default SidebarEmp;
